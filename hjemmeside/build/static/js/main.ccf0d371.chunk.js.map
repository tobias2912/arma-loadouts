{"version":3,"sources":["Sidebar.js","components/header.jsx","components/loadoutCard.jsx","components/loadoutlist.jsx","pages/home.jsx","pages/error.jsx","colors.js","pages/addNew.jsx","App.js","serviceWorker.js","index.js"],"names":["Sidebar","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","to","Typography","variant","Button","LoadoutCard","loadout","console","log","Card","CardContent","author","name","loadoutString","Loadoutlist","loadouts","map","item","_i","loadoutlist","Home","Container","Error","createMuiTheme","palette","secondary","main","primary","margin","width","AddNew","noValidate","autoComplete","TextField","id","label","App","CssBaseline","Helmet","content","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ccf0d371.chunk.js","sourcesContent":["import React from 'react'\nimport './Sidebar.css'\n\nimport { Button } from '@material-ui/core';\nimport 'fontsource-roboto';\n\n\nfunction Sidebar() {\n  return (\n    <div className=\"sidebar\">\n        <Button color=\"secondary\">Github</Button>\n        <Button color=\"secondary\">Andre ting</Button>\n    </div>\n  )\n}\nexport default Sidebar","\n\nimport { AppBar, Button, IconButton, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    {/* <MenuIcon /> */}\n\n                    <Link to=\"/\">\n                    show all\n                    </Link>\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    <Link to=\"/addLoadout\">\n                        Add new\n                    </Link>\n                </Typography>\n                <Button color=\"inherit\">Login</Button>\n            </Toolbar>\n        </AppBar>\n    )\n}","\n\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport React from 'react';\nexport default function LoadoutCard({ loadout }) {\n    console.log(loadout);\n    return (\n        <Card>\n            <CardContent>\n                <Typography>\n                    {loadout.author}\n                </Typography>\n                <Typography>\n                    {loadout.name}\n                </Typography>\n                <Typography>\n                    {loadout.loadoutString}\n                </Typography>\n            </CardContent>\n\n\n        </Card>\n    )\n\n}","\nimport React from 'react';\nimport LoadoutCard from './loadoutCard';\nexport default function Loadoutlist({ loadouts }) {\n    if(!loadouts){\n        return(<p>no loadouts</p>)\n    }\n    console.log(loadouts);\n    return (\n        <>\n            {loadouts.map((item, _i) => <LoadoutCard loadout={item}></LoadoutCard>)}\n        </>\n    )\n}\n","\nimport { AppBar, Button, Container, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Header from '../components/header';\nimport Loadoutlist from '../components/loadoutlist';\nconst loadoutlist =\n    [\n        {\n            name: 'seal',\n            loadoutString: '[[\"rhs_weap_mk18_KAC_bk\",\"\",\"rhsusf_acc_anpeq15_bk\",\"rhsusf_acc_su230a_mrds\",[\"rhs_mag_30Rnd_556x45_M855A1_Stanag\",30],[],\"\"],[],[\"rhsusf_weap_glock17g4\",\"rhsusf_acc_omega9k\",\"\",\"\",[\"rhsusf_mag_17Rnd_9x19_JHP\",17],[],\"\"],[\"U_B_Wetsuit\",[]],[\"V_RebreatherB\",[]],[\"B_ViperHarness_blk_F\",[[\"ACE_SpraypaintBlack\",1],[\"ACE_adenosine\",1],[\"ACE_atropine\",1],[\"ACE_Flashlight_XL50\",1],[\"ACE_salineIV_500\",1],[\"ACE_tourniquet\",2],[\"ACE_EarPlugs\",2],[\"ACE_quikclot\",3],[\"ACE_fieldDressing\",4],[\"ACE_morphine\",4],[\"SmokeShell\",2,1],[\"ACE_M84\",2,1],[\"HandGrenade\",2,1],[\"ACE_Chemlight_HiWhite\",2,1],[\"Chemlight_green\",2,1],[\"rhsusf_mag_17Rnd_9x19_JHP\",5,17],[\"DemoCharge_Remote_Mag\",2,1],[\"U_C_Man_casual_2_F\",false],[\"V_BandollierB_blk\",false]]],\"\",\"G_B_Diving\",[\"lerca_1200_black\",\"\",\"\",\"\",[],[],\"\"],[\"ItemMap\",\"ItemGPS\",\"\",\"ItemCompass\",\"tf_microdagr\",\"NVGogglesB_blk_F\"]]',\n            author: \"mirv\"\n        }\n        ,\n        {\n            name: 'seal',\n            loadoutString: '[[\"rhs_weap_mk18_KAC_bk\",\"\",\"rhsusf_acc_anpeq15_bk\",\"rhsusf_acc_su230a_mrds\",[\"rhs_mag_30Rnd_556x45_M855A1_Stanag\",30],[],\"\"],[],[\"rhsusf_weap_glock17g4\",\"rhsusf_acc_omega9k\",\"\",\"\",[\"rhsusf_mag_17Rnd_9x19_JHP\",17],[],\"\"],[\"U_B_Wetsuit\",[]],[\"V_RebreatherB\",[]],[\"B_ViperHarness_blk_F\",[[\"ACE_SpraypaintBlack\",1],[\"ACE_adenosine\",1],[\"ACE_atropine\",1],[\"ACE_Flashlight_XL50\",1],[\"ACE_salineIV_500\",1],[\"ACE_tourniquet\",2],[\"ACE_EarPlugs\",2],[\"ACE_quikclot\",3],[\"ACE_fieldDressing\",4],[\"ACE_morphine\",4],[\"SmokeShell\",2,1],[\"ACE_M84\",2,1],[\"HandGrenade\",2,1],[\"ACE_Chemlight_HiWhite\",2,1],[\"Chemlight_green\",2,1],[\"rhsusf_mag_17Rnd_9x19_JHP\",5,17],[\"DemoCharge_Remote_Mag\",2,1],[\"U_C_Man_casual_2_F\",false],[\"V_BandollierB_blk\",false]]],\"\",\"G_B_Diving\",[\"lerca_1200_black\",\"\",\"\",\"\",[],[],\"\"],[\"ItemMap\",\"ItemGPS\",\"\",\"ItemCompass\",\"tf_microdagr\",\"NVGogglesB_blk_F\"]]',\n            author: \"mirv\"\n        }\n    ]\n\nexport default function Home() {\n    return (\n        <>\n            <Header></Header>\n            <Container>\n                <Loadoutlist loadouts={loadoutlist}></Loadoutlist>\n\n            </Container>\n        </>\n    )\n}","\n\nimport React from 'react';\n\nexport default function Error() {\n    return (<></>)\n}","import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nexport const theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#ffffff'\n    },\n    primary: {\n      main: '#ffff00'\n    }\n  }\n});","\n\nimport { AppBar, Button, Container, IconButton, makeStyles, TextField, Toolbar, Typography } from '@material-ui/core';\nimport React from 'react';\nimport Header from '../components/header';\nimport Loadoutlist from '../components/loadoutlist';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\n\nexport default function AddNew() {\n    const classes = useStyles();\n    return (\n        <>\n            <Header></Header>\n            <Container>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField id=\"standard-basic\" label=\"name\" />\n                    <TextField id=\"filled-basic\" label=\"paste in loadout from arma\" variant=\"filled\" />\n                </form>\n            </Container>\n        </>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Sidebar from \"./Sidebar\";\nimport Helmet from \"react-helmet\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { colors, Container, Grid } from '@material-ui/core';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/home';\nimport Error from './pages/error';\n\nimport {theme} from './colors'\nimport AddNew from './pages/addNew';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Helmet>\n          <title>Tobben</title>\n          <description>Tobbe sin side</description>\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n          />\n        </Helmet>\n        <main>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/addLoadout\" component={AddNew} exact />\n            <Route component={Error} />\n          </Switch>\n        </main>\n        {/* <Title />\n          <Sidebar />\n          <Container maxwidth=\"sm\">\n            <Grid>\n              <Section filename='## overskrift Hjemmeside  <br> # this is stuff' />\n              <Section filename='### overskrift Hjemmeside  sadas' />\n\n            </Grid>\n\n          </Container>\n          <Footer color=\"primary\" /> */}\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}